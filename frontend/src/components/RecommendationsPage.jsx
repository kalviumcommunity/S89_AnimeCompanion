// frontend/src/components/RecommendationsPage.jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useAuth } from '../context/AuthContext';
import './RecommendationsPage.css'; // Styling file

const API_REC_URL = 'https://tsd-animecompanion.onrender.com/api/ai/recommendations-page';

function RecommendationsPage() {
    const { isAuthenticated } = useAuth();
    const [recommendations, setRecommendations] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    // Fetch recommendations list on mount
    useEffect(() => {
        const fetchRecommendations = async () => {
            if (!isAuthenticated) {
                setLoading(false);
                setError("Please log in to view personalized recommendations.");
                return;
            }
            
            setLoading(true);
            setError(null);

            try {
                // Axios will automatically send the cookie due to global config
                const response = await axios.get(API_REC_URL, {
                    withCredentials: true // Ensures cookie is sent
                });
                
                // The API returns a JSON array
                setRecommendations(response.data);

            } catch (err) {
                console.error("Failed to fetch recommendations:", err.response?.data || err.message);
                setError("Failed to load recommendations list. Please try logging out and back in.");
            } finally {
                setLoading(false);
            }
        };

        fetchRecommendations();
    }, [isAuthenticated]); 

    if (loading) {
        return <div className="rec-status-container"><p>Generating personalized recommendations... ðŸ’«</p></div>;
    }
    
    if (error) {
        return <div className="rec-status-container error"><p>{error}</p></div>;
    }
    
    if (recommendations.length === 0) {
        return <div className="rec-status-container"><p>No recommendations found. Try chatting about your favorite shows first!</p></div>;
    }

    return (
        <div className="recommendations-container">
            <h2>âœ¨ Top Recommendations For You âœ¨</h2>
            <p className="rec-intro">Generated by analyzing your latest chat history context.</p>

            <div className="recommendations-grid">
                {recommendations.map((rec, index) => (
                    <div key={index} className="recommendation-card">
                        <div className="card-rank">#{index + 1}</div>
                        <h3>{rec.title || 'Anime Title'}</h3>
                        <p className="card-reason">{rec.reason || 'No specific justification provided.'}</p>
                    </div>
                ))}
            </div>
        </div>
    );
}

export default RecommendationsPage;